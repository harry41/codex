
name: mCloud PromStack
on:
#   schedule:
#     - cron:  '1 4 * * 1-5'
  workflow_dispatch:
    inputs:
      ansible_cmd:
        description: 'Your Project Name'
        default: 'monitor.yml -t alertmanager,prometheus,telegraf,influxdb'
        
jobs:
  mCloud-PromStack:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
     GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
     ANSIBLE_CONFIG: "${GITHUB_WORKSPACE}/mcloud-ansible/inventory/ansible.cfg"
     ANSIBLE_ROLES_PATH: ${GITHUB_WORKSPACE}/mcloud-ansible/playbook/roles:~/.ansible/roles
     ANSIBLE_WORKING_DIR: mcloud-ansible/playbook
     ANSIBLE_CMD: ${{ github.event.inputs.ansible_cmd || 'monitor.yml -t prometheus' }}
     SLACK_CLI_TOKEN: ${{ secrets.DEFAULT_SLACK_TOKEN }}
     SLACK_CHANNEL: '#devops'
     ANSIBLE_LOG_FOLDER: ${GITHUB_WORKSPACE}/ansible
     ansible_requirements: 'assets/prometheus/requirements.yml'
     MAX_REPEAT: 10000
     EXTRA_VARS: "/tmp/extravars.sh"
     DEVOPS_SLACK_WEBHOOK: ${{ secrets.DEVOPS_SLACK_WEBHOOK }}
     MCLOUD_TELEGRAM_TOKEN: ${{ secrets.MCLOUD_TELEGRAM_TOKEN }}
     MCLOUD_SENDGRID_API_KEY: ${{ secrets.MCLOUD_SENDGRID_API_KEY }}
     
             
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            
      - name: info 
        run: |
          ansible --version
          /opt/pipx/venvs/ansible-core/bin/python -m pip install prettytable jmespath
          sudo curl -sL https://raw.githubusercontent.com/rockymadden/slack-cli/master/src/slack -o /usr/bin/mslack
          sudo chmod +x /usr/bin/mslack
  
      - name: mproject clone ${{ env.ANSIBLE_WORKING_DIR }}
        run: |
          git clone -b master git@bitbucket.org:devopsexpert/mcloud-ansible.git ${GITHUB_WORKSPACE}/mcloud-ansible
          git clone git@github.com:HarryTheDevOpsGuy/mCloud-monika.git mcloud-monika
          sudo cat <<EOT >> ${{ env.EXTRA_VARS }}
          export SERVER=github
          export MTRACKER_SILENT="true"
          export MAGENT_SILENT="true"
          EOT
          sudo curl -sL https://github.com/HarryTheDevOpsGuy/mTracker/raw/master/$(uname -p)/mtracker -o /usr/bin/mtracker
          sudo chmod +x /usr/bin/mtracker
          sudo timedatectl set-timezone Asia/Calcutta
          
      - name: Setup PromStack
        working-directory: ${{ env.ANSIBLE_WORKING_DIR }}
        run: |
           if [[ ! -f ${ANSIBLE_INVENTORY} ]]; then
             export ANSIBLE_INVENTORY="/etc/ansible/hosts"
             export TARGET_HOST="127.0.0.1"
             export ANSIBLE_STDOUT_CALLBACK=yaml
           fi 
           build_url=https://github.com/HarryTheDevOpsGuy/mproject/actions/runs/${{ github.run_id }}
           mslack chat send --title "${GITHUB_RUN_NUMBER} - Started Pipeline -> <${build_url}|${GITHUB_JOB}> By ${{ github.actor }}" --text "*Event :* \`$GITHUB_EVENT_NAME\`\n*Triggered :* \`${{ github.actor }}\`\n*Target Infra:* \`${TARGET_HOST}\`" --channel "${SLACK_CHANNEL}" --color good --filter '.file.url_private' > /dev/null 2>&1
           #ansible-playbook -e "target_host=127.0.0.1" ${ANSIBLE_CMD}
           bash -x setvars.sh  

      - name: Run Sync latest config
        working-directory: ${{ env.ANSIBLE_WORKING_DIR }}
        shell: bash
        run: |
          for (( i = 1; i < ${{ env.MAX_REPEAT }}; i++ )); do
            echo "running loop $i/${{ env.MAX_REPEAT }}" 

                cd ${GITHUB_WORKSPACE}/mcloud-monika 
                git pull
                bash configs/promstack/runscript-monitor.sh

            if [[ $(( i % 5 )) == 0 ]]; then
                cd ${GITHUB_WORKSPACE}/${{ env.ANSIBLE_WORKING_DIR }}
                git pull
                export ANSIBLE_CMD='monitor.yml -t prometheus_configure,alertmanager_configure'
                bash -x setvars.sh
            fi

            # sudo mtracker -m a97 -f ${{ env.EXTRA_VARS }}
            echo "$(date) - waiting for 30 Seconds"
            sleep 50
          done
